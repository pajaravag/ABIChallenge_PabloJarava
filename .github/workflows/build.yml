name: Build

env:
  GCP_ZONE: us-east1
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
permissions:
  pages: write
  contents: write
  id-token: write
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Code quality checks
        run: |
          isort --check-only .
          black --check .
          ruff check .

      - name: Run tests
        run: |
          pytest

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install tox and any other packages
        run: pip install tox
      - name: Run tox
        run: tox -e py
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Configure Docker Client
        run: |
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker $GCP_ZONE-docker.pkg.dev --quiet

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest .

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./.github/scripts/git_update.sh -v major

      - name: Push Docker Image to Container Registry (GCR)
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |-
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

      - name: Deploy Docker Image to Cloud Run
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.IMAGE_NAME }}
          region: ${{ env.GCP_ZONE }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
